# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.activity_tokens import ActivityTokens  # noqa: F401,E501
from swagger_server import util


class LearnerTokens(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, learner_keycloak_id: str=None, tokens: List[ActivityTokens]=None):  # noqa: E501
        """LearnerTokens - a model defined in Swagger

        :param learner_keycloak_id: The learner_keycloak_id of this LearnerTokens.  # noqa: E501
        :type learner_keycloak_id: str
        :param tokens: The tokens of this LearnerTokens.  # noqa: E501
        :type tokens: List[ActivityTokens]
        """
        self.swagger_types = {
            'learner_keycloak_id': str,
            'tokens': List[ActivityTokens]
        }

        self.attribute_map = {
            'learner_keycloak_id': 'learnerKeycloakId',
            'tokens': 'tokens'
        }

        self._learner_keycloak_id = learner_keycloak_id
        self._tokens = tokens

    @classmethod
    def from_dict(cls, dikt) -> 'LearnerTokens':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LearnerTokens of this LearnerTokens.  # noqa: E501
        :rtype: LearnerTokens
        """
        return util.deserialize_model(dikt, cls)

    @property
    def learner_keycloak_id(self) -> str:
        """Gets the learner_keycloak_id of this LearnerTokens.

        The keycloak GUID for the learner (the subject field of the OAUTH object)  # noqa: E501

        :return: The learner_keycloak_id of this LearnerTokens.
        :rtype: str
        """
        return self._learner_keycloak_id

    @learner_keycloak_id.setter
    def learner_keycloak_id(self, learner_keycloak_id: str):
        """Sets the learner_keycloak_id of this LearnerTokens.

        The keycloak GUID for the learner (the subject field of the OAUTH object)  # noqa: E501

        :param learner_keycloak_id: The learner_keycloak_id of this LearnerTokens.
        :type learner_keycloak_id: str
        """
        if learner_keycloak_id is None:
            raise ValueError("Invalid value for `learner_keycloak_id`, must not be `None`")  # noqa: E501

        self._learner_keycloak_id = learner_keycloak_id

    @property
    def tokens(self) -> List[ActivityTokens]:
        """Gets the tokens of this LearnerTokens.

        Tokens earned by the learner  # noqa: E501

        :return: The tokens of this LearnerTokens.
        :rtype: List[ActivityTokens]
        """
        return self._tokens

    @tokens.setter
    def tokens(self, tokens: List[ActivityTokens]):
        """Sets the tokens of this LearnerTokens.

        Tokens earned by the learner  # noqa: E501

        :param tokens: The tokens of this LearnerTokens.
        :type tokens: List[ActivityTokens]
        """

        self._tokens = tokens
