# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from activity_index_server.models.base_model_ import Model
from activity_index_server import util


class Error(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, error_message: str=None, error_code: str=None, error_link: str=None, user_message: str=None):  # noqa: E501
        """Error - a model defined in Swagger

        :param error_message: The error_message of this Error.  # noqa: E501
        :type error_message: str
        :param error_code: The error_code of this Error.  # noqa: E501
        :type error_code: str
        :param error_link: The error_link of this Error.  # noqa: E501
        :type error_link: str
        :param user_message: The user_message of this Error.  # noqa: E501
        :type user_message: str
        """
        self.swagger_types = {
            'error_message': str,
            'error_code': str,
            'error_link': str,
            'user_message': str
        }

        self.attribute_map = {
            'error_message': 'errorMessage',
            'error_code': 'errorCode',
            'error_link': 'errorLink',
            'user_message': 'userMessage'
        }

        self._error_message = error_message
        self._error_code = error_code
        self._error_link = error_link
        self._user_message = user_message

    @classmethod
    def from_dict(cls, dikt) -> 'Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Error of this Error.  # noqa: E501
        :rtype: Error
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error_message(self) -> str:
        """Gets the error_message of this Error.


        :return: The error_message of this Error.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message: str):
        """Sets the error_message of this Error.


        :param error_message: The error_message of this Error.
        :type error_message: str
        """
        if error_message is None:
            raise ValueError("Invalid value for `error_message`, must not be `None`")  # noqa: E501

        self._error_message = error_message

    @property
    def error_code(self) -> str:
        """Gets the error_code of this Error.


        :return: The error_code of this Error.
        :rtype: str
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code: str):
        """Sets the error_code of this Error.


        :param error_code: The error_code of this Error.
        :type error_code: str
        """

        self._error_code = error_code

    @property
    def error_link(self) -> str:
        """Gets the error_link of this Error.


        :return: The error_link of this Error.
        :rtype: str
        """
        return self._error_link

    @error_link.setter
    def error_link(self, error_link: str):
        """Sets the error_link of this Error.


        :param error_link: The error_link of this Error.
        :type error_link: str
        """

        self._error_link = error_link

    @property
    def user_message(self) -> str:
        """Gets the user_message of this Error.


        :return: The user_message of this Error.
        :rtype: str
        """
        return self._user_message

    @user_message.setter
    def user_message(self, user_message: str):
        """Sets the user_message of this Error.


        :param user_message: The user_message of this Error.
        :type user_message: str
        """

        self._user_message = user_message
