#!/bin/sh
### BEGIN INIT INFO
# Provides:          tcpdump
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemon at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

dir=""
user="{{ tcpdump_service.user }}"
ifaces="{{ tcpdump_service.ifaces | join(' ') }}"
filter_path="{{ tcpdump_service.filter_path }}"
DEST_PREFIX="{{ tcpdump_service.output_path }}"

name=`basename $0`
pid_file_prefix="/var/run/$name"
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

get_pid() {
    cat "${pid_file_prefix}.$1.pid"
}

num_not_running() {
    count=0

    for iface in $ifaces; do
        if [ -f "${pid_file_prefix}.${iface}.pid" ] && ps `get_pid $iface` > /dev/null 2>&1; then
            true
        else
            count="$(( count + 1 ))"
        fi
    done
    
    return $count
}

all_not_running() {
    num_not_running
    NNR=$?
    num_ifaces=`echo $ifaces | wc -w`
    [ $NNR -eq $num_ifaces ]
}

case "$1" in
    start)
    num_not_running
    NNR=$?
    if [ $NNR -eq 0 ]; then
        echo "Already started"
    else
        echo "Starting $name"
        cd "$dir"
        if [ -z "$user" ]; then
            USER_ARG=""
        else
            USER_ARG="-Z $user"
        fi
        for iface in $ifaces; do
            sudo -u "$user" \
              /usr/sbin/tcpdump \
              -n            \
              -p            \
              -B 512000     \
              -F ${filter_path} \
              -C 1000       \
              -z gzip       \
              $USER_ARG     \
              -i $iface     \
              -w ${DEST_PREFIX}-`date +%Y%m%d-%H%M%S`.${iface}.pcap \
              >> "$stdout_log" 2>> "$stderr_log" &
            echo $! > "${pid_file_prefix}.${iface}.pid"
        done
        num_not_running
        NNR=$?
        if [ $NNR -ne 0 ]; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if ! all_not_running; then
        echo -n "Stopping $name.."
        for iface in $ifaces; do
            kill `get_pid $iface`
        done;
        for i in {1..10}
        do
            if all_not_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if ! all_not_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            for iface in $ifaces; do
                if [ -f "${pid_file_prefix}.${iface}.pid" ]; then
                    rm "${pid_file_prefix}.${iface}.pid"
                fi
            done;
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if ! all_not_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    num_not_running
    NNR=$?
    if [ $NNR -eq 0 ]; then
        echo "All Daemons Running"
    elif ! all_not_running; then
        echo "Partially Running ($NNR inactive)"
    else
        echo "Stopped (all daemons are inactive)"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
